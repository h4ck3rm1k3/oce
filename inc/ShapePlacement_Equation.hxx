// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapePlacement_Equation_HeaderFile
#define _ShapePlacement_Equation_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif

#ifndef _ShapePlacement_TypeOfEquation_HeaderFile
#include <ShapePlacement_TypeOfEquation.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _gp_Dir_HeaderFile
#include <gp_Dir.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _ShapePlacement_TypeOfConstraint_HeaderFile
#include <ShapePlacement_TypeOfConstraint.hxx>
#endif
#ifndef _ShapePlacement_TypeOfAxisConstraint_HeaderFile
#include <ShapePlacement_TypeOfAxisConstraint.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_OStream_HeaderFile
#include <Standard_OStream.hxx>
#endif
class TopoDS_Shape;
class TopoDS_Face;
class TopoDS_Edge;
class gp_Pnt;
class gp_Dir;



class ShapePlacement_Equation  {
public:

  void* operator new(size_t,void* anAddress) 
  {
    return anAddress;
  }
  void* operator new(size_t size) 
  {
    return Standard::Allocate(size); 
  }
  void  operator delete(void *anAddress) 
  {
    if (anAddress) Standard::Free((Standard_Address&)anAddress); 
  }

  
  Standard_EXPORT   ShapePlacement_Equation();
  
  Standard_EXPORT   ShapePlacement_Equation(const ShapePlacement_TypeOfConstraint aKey,const TopoDS_Shape& aSubShape,const ShapePlacement_TypeOfAxisConstraint aSubAxis,const TopoDS_Shape& aFixShape,const ShapePlacement_TypeOfAxisConstraint aFixedAxis,const Standard_Real aValue,const Standard_Boolean IsaValue);
  
  Standard_EXPORT   ShapePlacement_Equation(const Standard_Real anAngularTolerance,const ShapePlacement_TypeOfConstraint aKey,const TopoDS_Shape& aSubShape,const ShapePlacement_TypeOfAxisConstraint aSubAxis,const TopoDS_Shape& aFixShape,const ShapePlacement_TypeOfAxisConstraint aFixedAxis,const Standard_Real aValue,const Standard_Boolean IsaValue);
  
  Standard_EXPORT     void Init(const Standard_Real anAngularTolerance,const ShapePlacement_TypeOfConstraint aKey,const TopoDS_Shape& aSubShape,const ShapePlacement_TypeOfAxisConstraint aSubAxis,const TopoDS_Shape& aFixShape,const ShapePlacement_TypeOfAxisConstraint aFixedAxis,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  //! This methode prints the set of equation <br>
  Standard_EXPORT     void Print(Standard_OStream& S) const;
  
  Standard_EXPORT     gp_Pnt FixedPoint() const;
  
  Standard_EXPORT     gp_Pnt MovingPoint() const;
  //! applies when the fixed part of the constraint is a plane <br>
//! <br>
  Standard_EXPORT     gp_Dir FixedNormal() const;
  //! applies when the moving part of the constraint is a plane <br>
//! <br>
  Standard_EXPORT     gp_Dir MovingNormal() const;
  //! applies when the fixed part of the constraint is a line <br>
//! <br>
//! <br>
  Standard_EXPORT     gp_Dir FixedDirection() const;
  //! applies when the moving part of the constraint is a line <br>
//! <br>
  Standard_EXPORT     gp_Dir MovingDirection() const;
  
  Standard_EXPORT     Standard_Real SignedDistance() const;
  
  Standard_EXPORT     Standard_Real Angle() const;
  
  Standard_EXPORT     ShapePlacement_TypeOfEquation Type() const;





protected:





private:

  
  Standard_EXPORT     void InitFaceFace(const Standard_Real anAngularTol,const TopoDS_Face& aFace,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  
  Standard_EXPORT     void InitEdgeFace(const TopoDS_Edge& anEdge,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  
  Standard_EXPORT     void InitEdgeEdge(const TopoDS_Edge& anEdge,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  
  Standard_EXPORT     void InitAxisFace(const TopoDS_Face& aFace,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  
  Standard_EXPORT     void InitFaceAxis(const TopoDS_Face& aFace,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;
  
  Standard_EXPORT     void InitAxisAxis(const TopoDS_Face& aFace,const TopoDS_Face& aFixedFace,const ShapePlacement_TypeOfConstraint aKey,const Standard_Real aValue,const Standard_Boolean IsaValue) ;


ShapePlacement_TypeOfEquation myKeyWord;
gp_Pnt myFixedPoint;
gp_Dir myFixedNormal;
gp_Dir myFixedDirection;
gp_Pnt myMovingPoint;
gp_Dir myMovingNormal;
gp_Dir myMovingDirection;
Standard_Real myDistance;
Standard_Real myAngle;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
