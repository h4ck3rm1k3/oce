// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ShapeInterference_Tangency_HeaderFile
#define _ShapeInterference_Tangency_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_ShapeInterference_Tangency_HeaderFile
#include <Handle_ShapeInterference_Tangency.hxx>
#endif

#ifndef _ShapeInterference_TypeOfTgcy_HeaderFile
#include <ShapeInterference_TypeOfTgcy.hxx>
#endif
#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _ShapeInterference_InterfObj_HeaderFile
#include <ShapeInterference_InterfObj.hxx>
#endif
#ifndef _ShapeInterference_TypeOfInterf_HeaderFile
#include <ShapeInterference_TypeOfInterf.hxx>
#endif
class TopoDS_Shape;



class ShapeInterference_Tangency : public ShapeInterference_InterfObj {

public:

  //! Empty constructor. <br>
  Standard_EXPORT   ShapeInterference_Tangency();
  //! Sets field myTgcyType with <aType>. <br>
  Standard_EXPORT     void SetTgcyType(const ShapeInterference_TypeOfTgcy aType) ;
  //! Sets fields myShapeOn1 and myShapeOn2 with the <br>
//!          given data. <br>
//!          If myTypeOfTgcy is TGCYONEDGE, <aShapeOf1> and <br>
//!          <aShapeOf2>, are the two edges generating the <br>
//!          elementary interference. <br>
//!          If myTypeOfTgcy is TGCYONFACE, <aShapeOf1> and <br>
//!          <aShapeOf2> are the two faces generating the <br>
//!          elementary interference. <br>
  Standard_EXPORT     void SetGeneratingShapes(const TopoDS_Shape& aShapeOf1,const TopoDS_Shape& aShapeOf2) ;
  //! Fills field areOnSameMatterSide with the given data. <br>
  Standard_EXPORT     void SetSameMatterSide(const Standard_Boolean aBoolean) ;
  //! Returns ShapeInterference_TOI_TGCY. <br>
  Standard_EXPORT   virtual  ShapeInterference_TypeOfInterf GetInterfType() const;
  //! Returns type of tangency TGCYONEDGE or TGCYONFACE. <br>
  Standard_EXPORT     ShapeInterference_TypeOfTgcy GetTgcyType() const;
  //! Returns fields myShapeOn1 and  myShapeOn2. <br>
  Standard_EXPORT     void GetGeneratingShapes(TopoDS_Shape& aShapeOf1,TopoDS_Shape& aShapeOf2) const;
  //! Returns <True> if myShapeOn1 myShapeOn2 are on <br>
//!          shapes of same matter side. <br>
  Standard_EXPORT     Standard_Boolean AreOnSameMatterSide() const;




  DEFINE_STANDARD_RTTI(ShapeInterference_Tangency)

protected:




private: 


ShapeInterference_TypeOfTgcy myTypeOfTgcy;
TopoDS_Shape myShapeOn1;
TopoDS_Shape myShapeOn2;
Standard_Boolean areOnSameMatterSide;


};





// other Inline functions and methods (like "C++: function call" methods)


#endif
